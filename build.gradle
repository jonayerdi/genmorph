plugins {
    id 'java'
    id "application"
    id 'eclipse'
    id 'idea'
    id "com.github.johnrengelman.shadow" version "6.1.0"
}

group 'ch.usi'
version '1.0-SNAPSHOT'

sourceCompatibility = 1.8
targetCompatibility = 1.8

application {
    mainClassName = "ch.usi.gassert.GAssertMRs"
}

test {
    // Always rerun tests
    outputs.upToDateWhen { false }
}

repositories {
    mavenLocal()
    mavenCentral()
}

configurations {
    // configuration that holds jars to include in the jar
    extraLibs
}

dependencies {
    // I need to import the jar because I need to use a JAR without the original version of the Expression class
    // compile group: 'com.udojava', name: 'EvalEx', version: '2.1'
    implementation files('libs/EvalEx-2.1.jar')
    // This is for running OASIs-generated tests
    implementation group: 'junit', name: 'junit', version: '4.12'
    implementation group: 'com.thoughtworks.xstream', name: 'xstream', version: '1.4.18'
    implementation 'log4j:log4j:1.2.17'
    implementation group: 'com.google.code.gson', name: 'gson', version: '2.8.5'
    implementation 'com.github.javaparser:javaparser-core:3.6.26'
    implementation group: 'org.ow2.asm', name: 'asm-all', version: '5.1'
    implementation 'net.jodah:typetools:0.6.1'
    implementation group: 'org.jfree', name: 'jfreechart', version: '1.5.0'
    implementation group: 'com.google.guava', name: 'guava', version: '11.0.2'
    implementation group: 'org.jfree', name: 'jcommon', version: '1.0.24'
    implementation group: 'com.itextpdf', name: 'itextpdf', version: '5.5.13.1'
    implementation group: 'org.hamcrest', name: 'hamcrest-all', version: '1.3'
    implementation group: 'org.apache.commons', name: 'commons-math3', version: '3.6.1' // for summary statistics
    implementation group: 'org.apache.commons', name: 'commons-csv', version: '1.7'
    testImplementation group: 'junit', name: 'junit', version: '4.12'
    testImplementation group: 'org.mdkt.compiler', name: 'InMemoryJavaCompiler', version: '1.3.0'
}

jar {
    from {
        configurations.compile.collect { it.isDirectory() ? it : zipTree(it) }
    }
}
